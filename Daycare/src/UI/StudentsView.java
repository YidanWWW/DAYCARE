/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Person.Student;
import java.awt.BorderLayout;
import java.awt.Dialog.ModalityType;
import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import util.DateUtil;
import util.FileUtil;
import util.VaccineRules;
import vaccine.Dose;
import vaccine.Vaccine;


public class StudentsView extends javax.swing.JPanel {
    
    private Vector<Student> studentsList;
    DefaultTableModel myTM;
    /**
     * Creates new form StudentsView
     */
    public StudentsView(Vector<Student> studentsList) {
        initComponents();
        this.studentsList = studentsList;
        postInit();
        myTM  = (DefaultTableModel) studentTable.getModel();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        totalCountLabel = new javax.swing.JLabel();
        totalCount = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addStudentThroughCSVButton = new javax.swing.JButton();
        addStudentThroughFormButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnFormAdd = new javax.swing.JButton();
        btnCsvAdd = new javax.swing.JButton();
        btnViewImmunization = new javax.swing.JButton();
        btnAddImunization = new javax.swing.JButton();
        addStudentButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1486, 907));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("PT Sans", 1, 24)); // NOI18N
        jLabel1.setText("STUDENTS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1202, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 1480, 42));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        totalCountLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        totalCountLabel.setText("Total Count:");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addStudentThroughCSVButton.setText("CSV file ");
        addStudentThroughCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentThroughCSVButtonActionPerformed(evt);
            }
        });

        addStudentThroughFormButton.setText("Form");
        addStudentThroughFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentThroughFormButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addStudentThroughCSVButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentThroughFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentThroughCSVButton)
                    .addComponent(addStudentThroughFormButton))
                .addGap(43, 43, 43))
        );

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name", "Age", "GPA", "Father Name", "Mother Name", "Address", "Phone Number", "Registeration Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studentTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(totalCountLabel)
                        .addGap(960, 960, 960)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(334, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(totalCount)
                    .addContainerGap(1606, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalCountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(totalCount)
                    .addContainerGap(359, Short.MAX_VALUE)))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 86, 1650, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        btnFormAdd.setText("Form");
        btnFormAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormAddActionPerformed(evt);
            }
        });

        btnCsvAdd.setText("CSV");
        btnCsvAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsvAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFormAdd)
                .addGap(37, 37, 37)
                .addComponent(btnCsvAdd)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFormAdd)
                    .addComponent(btnCsvAdd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 620, -1, -1));

        btnViewImmunization.setText("View Immunization");
        btnViewImmunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewImmunizationActionPerformed(evt);
            }
        });
        add(btnViewImmunization, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 510, 156, 30));

        btnAddImunization.setText("Add Immunization");
        btnAddImunization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImunizationActionPerformed(evt);
            }
        });
        add(btnAddImunization, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 570, 160, 30));

        addStudentButton.setText("+ Add");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });
        add(addStudentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 60, 96, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addStudentThroughCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentThroughCSVButtonActionPerformed
       
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            
            if(selectedFile.getAbsolutePath().endsWith(".csv"))
            {
                 List<String> csvStrings = FileUtil.readCSVFile( selectedFile.getAbsolutePath());
                 for(String csvString : csvStrings)
                     studentsList.add(new Student(csvString));
                 
                JOptionPane.showMessageDialog(this, "Added Students Successfully..!", "Added Students", 1);
                populateTable();
                updateTotalCount();
                
                jPanel2.setVisible(false); 
            }
            else{
               
                JOptionPane.showMessageDialog(this, "Please select csv files only!!", "CSV file required ", 2);
            }

        }
    }//GEN-LAST:event_addStudentThroughCSVButtonActionPerformed

    private void addStudentThroughFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentThroughFormButtonActionPerformed
        
         try 
         {
            StudentDialog dialog = new StudentDialog(studentsList);
            dialog.setModalityType(ModalityType.APPLICATION_MODAL);
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
       
        jPanel2.setVisible(false);
        populateTable();
        updateTotalCount();
    }//GEN-LAST:event_addStudentThroughFormButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        
        jPanel2.setVisible(true);
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void btnViewImmunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewImmunizationActionPerformed

    int row = studentTable.getSelectedRow();
    if(row == -1)
    {
        JOptionPane.showMessageDialog(this, "Please select a student from table!!", "Select a student", 2);
        return;
    }
    
    try 
    {

       Student student = studentsList.get(row);
       ViewImmunizationDialog dialog = new ViewImmunizationDialog(student);
       dialog.setModalityType(ModalityType.APPLICATION_MODAL);
       dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
       dialog.setLocationRelativeTo(null);
       dialog.setVisible(true);

    } 
    catch (Exception ex) {
       ex.printStackTrace();
    }
    jPanel6.setVisible(false);
    
    
            
        
        
    }//GEN-LAST:event_btnViewImmunizationActionPerformed

    private void btnCsvAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsvAddActionPerformed
       
        int row = studentTable.getSelectedRow();
        if(row == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select a student from table!!", "Select a student", 2);
            return;
        }
        Student student = studentsList.get(row);
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            
            if(selectedFile.getAbsolutePath().endsWith(".csv"))
            {
                 List<String> csvStrings = FileUtil.readCSVFile( selectedFile.getAbsolutePath());
                 for(String csvString : csvStrings)
                     addVaccine(student, csvString);
                    
                    
                JOptionPane.showMessageDialog(this, "Added Vaccinations Successfully..!", "Added Students", 1);
                populateTable();
                updateTotalCount();
                jPanel2.setVisible(false); 
            }
            else{
               
                JOptionPane.showMessageDialog(this, "Please select csv files only!!", "CSV file required ", 2);
            }

        }

    }//GEN-LAST:event_btnCsvAddActionPerformed

    private void btnAddImunizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImunizationActionPerformed
        jPanel6.setVisible(true);
    }//GEN-LAST:event_btnAddImunizationActionPerformed

    private void btnFormAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormAddActionPerformed
        
        try 
         {
            int row = studentTable.getSelectedRow();
            if(row == -1)
            {
                JOptionPane.showMessageDialog(this, "Please select a student from table!!", "Select a student", 2);
                return;
            }
            
            Student student = studentsList.get(row);
            ImmunizationDialog dialog = new ImmunizationDialog(student);
            dialog.setModalityType(ModalityType.APPLICATION_MODAL);
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
         jPanel6.setVisible(false);
       
    }//GEN-LAST:event_btnFormAddActionPerformed
    public void postInit(){
        jPanel2.setVisible(false); 
        generateTable();
        updateTotalCount();
        jPanel6.setVisible(false);
       
    }
    
    public void generateTable(){
        
        myTM = (DefaultTableModel) studentTable.getModel();
        jScrollPane1.setVisible(false);
        studentTable.setAutoCreateRowSorter(true);
        studentTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        studentTable.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(studentTable);
        jScrollPane1.setVisible(true);   
        populateTable();
        
}
    
    public void populateTable(){
        
        myTM.setRowCount(0);
        int ix = 0; // use ix as an index, i.e. id for object in table
        for (Student student : studentsList)
        {
            Object[] studentObj = {++ix, student.getFirstName(), student.getLastName(), student.getAge(), student.getGpa(), student.getFatherName(), student.getMotherName(),student.getAddress(), student.getPhoneNumber(), student.getWalkInDate()};
            myTM.addRow(studentObj);
        }
    
    }
    
    public void addVaccine(Student student, String csvString)
    {
        String[] parsedVaccineData = csvString.split(",");
        String vaccineName = parsedVaccineData[0];
        int doseNumber = Integer.parseInt(parsedVaccineData[1]);
        String date = parsedVaccineData[2];
        
        boolean vaccineExists = false;
        HashMap<String, Integer>  immunizationRequirements = VaccineRules.getImmunizationRequirements(student.getAge());
        if(! immunizationRequirements.containsKey(vaccineName))
            return;
        int maxDoses = immunizationRequirements.get(vaccineName);
        Vaccine newVaccine = new Vaccine(vaccineName, vaccineName, maxDoses);
        for(Vaccine vaccine : student.getVaccineList())
        {
            if(vaccine.getVaccineName().equals(vaccineName))
            {
                newVaccine = vaccine;
                vaccineExists = true;
                break;
            }
        }
        Dose dose = new Dose(doseNumber,DateUtil.parseStringToDate(date, "yyyy-mm-dd"));
        newVaccine.addDose(dose);
        newVaccine.setLatestImmunizationDate(dose.getDate());
        if(!vaccineExists)
            student.addVaccine(newVaccine);
        
    }

    public void updateTotalCount()
    {
        totalCountLabel.setText("Total Count: " + studentsList.size());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton addStudentThroughCSVButton;
    private javax.swing.JButton addStudentThroughFormButton;
    private javax.swing.JButton btnAddImunization;
    private javax.swing.JButton btnCsvAdd;
    private javax.swing.JButton btnFormAdd;
    private javax.swing.JButton btnViewImmunization;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel totalCount;
    private javax.swing.JLabel totalCountLabel;
    // End of variables declaration//GEN-END:variables
}
