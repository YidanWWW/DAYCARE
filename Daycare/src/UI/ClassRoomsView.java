/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;


import Person.Student;
import Person.Teacher;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.*;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Classroom;
import model.DayCare;
import model.Group;
import util.GroupRules;


public class ClassRoomsView extends javax.swing.JPanel {

    Vector<Object> classRooms = new Vector<>();
    DefaultTableModel groupDtm;
    DefaultTableModel studentDtm;
    DayCare daycare;
    int selectedGroupIndex;
    int selectedClassIndex;
    /**
     * Creates new form ClassRoomsView
     */
    public ClassRoomsView(DayCare daycare) {
        this.daycare = daycare;
        selectedGroupIndex = -1;
        selectedClassIndex = -1;
        initComponents();
        postInit(daycare);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        teacherLabel = new javax.swing.JLabel();
        teacherValueLabel = new javax.swing.JLabel();
        notePrefix = new javax.swing.JLabel();
        noteValue = new javax.swing.JLabel();
        addStudentToGroupButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        groupLimitLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupsTable = new javax.swing.JTable();
        addGroupButton = new javax.swing.JButton();
        totalCount = new javax.swing.JLabel();
        notePrefix1 = new javax.swing.JLabel();
        ageRange = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        classRoomSelect = new javax.swing.JComboBox<>();
        addTeacherButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        teacherLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        teacherLabel.setForeground(new java.awt.Color(255, 102, 0));
        teacherLabel.setText("Teacher: ");
        add(teacherLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 66, 31));

        teacherValueLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        add(teacherValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, 200, 31));

        notePrefix.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        notePrefix.setForeground(new java.awt.Color(255, 102, 0));
        notePrefix.setText("Age range of students: (Months)");
        add(notePrefix, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        noteValue.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        add(noteValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 230, 100, 30));

        addStudentToGroupButton.setBackground(new java.awt.Color(255, 102, 0));
        addStudentToGroupButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        addStudentToGroupButton.setForeground(new java.awt.Color(255, 255, 255));
        addStudentToGroupButton.setText(" Add A Student");
        addStudentToGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentToGroupButtonActionPerformed(evt);
            }
        });
        add(addStudentToGroupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, -1, -1));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "Age(Months)", "Contact Phone No."
            }
        ));
        jScrollPane1.setViewportView(studentTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 640, 298));

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("Maximum number of Groups for this class: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        groupLimitLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        add(groupLimitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 62, 39));

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        groupsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Group Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        groupsTable.setColumnSelectionAllowed(true);
        groupsTable.getTableHeader().setReorderingAllowed(false);
        groupsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(groupsTable);
        groupsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 231, 302));

        addGroupButton.setBackground(new java.awt.Color(255, 102, 0));
        addGroupButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        addGroupButton.setForeground(new java.awt.Color(255, 255, 255));
        addGroupButton.setText(" Add A Group");
        addGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGroupButtonActionPerformed(evt);
            }
        });
        add(addGroupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 600, -1, -1));
        add(totalCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 600, 50, 46));

        notePrefix1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        notePrefix1.setForeground(new java.awt.Color(255, 102, 0));
        notePrefix1.setText("Maximum number of students:");
        add(notePrefix1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, -1, -1));

        ageRange.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        add(ageRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 110, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/2.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 100, -1, 80));

        classRoomSelect.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        classRoomSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        classRoomSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classRoomSelectActionPerformed(evt);
            }
        });
        add(classRoomSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 144, 36));

        addTeacherButton.setBackground(new java.awt.Color(255, 102, 0));
        addTeacherButton.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        addTeacherButton.setForeground(new java.awt.Color(255, 255, 255));
        addTeacherButton.setText("Add A Classroom");
        addTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherButtonActionPerformed(evt);
            }
        });
        add(addTeacherButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 176, 36));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel1.setText("PLEASE SELECT A CLASSROOM:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherButtonActionPerformed
        ClassRoomDialog addClass = new ClassRoomDialog(daycare, this);
        addClass.setLocationRelativeTo(null);
        addClass.setVisible(true);
    }//GEN-LAST:event_addTeacherButtonActionPerformed

    private void addGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGroupButtonActionPerformed
        GroupDialog ag = new GroupDialog(daycare, classRoomSelect.getSelectedIndex(), this);
        ag.setLocationRelativeTo(null);
        ag.setVisible(true);
    }//GEN-LAST:event_addGroupButtonActionPerformed

    private void classRoomSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classRoomSelectActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String name = (String)cb.getSelectedItem();
       
        int index = cb.getSelectedIndex();
        if(index > -1){
            cb.setSelectedIndex(cb.getSelectedIndex());
            populateGroupTable();
            //selectGroupPanel.setVisible(true);
            cb.setSelectedItem(name);
            selectedClassIndex = index;
            addGroupButton.setVisible(true);
            groupLimitLabel.setText(""+daycare.getClassRoomsList().get(cb.getSelectedIndex()).getMaxGroup());
            
        }
        checkMaxLimitForGroup();
        checkMaxLimitForGroupAddition();
        
    }//GEN-LAST:event_classRoomSelectActionPerformed

    private void groupsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupsTableMouseClicked
            JTable source = (JTable)evt.getSource();
            int row = source.rowAtPoint( evt.getPoint() );
            int column = source.columnAtPoint( evt.getPoint() );
            String s=source.getModel().getValueAt(row, 0)+"";
            //groupInfoPanel.setVisible(true);
            selectedGroupIndex = row;
            noteValue.setText(""+daycare.getClassRoomsList().get(classRoomSelect.getSelectedIndex()).getGroups().get(row).getGroupSize());
            checkMaxLimitForGroup();
            populateStudentTable();
            setTeacherName();
    }//GEN-LAST:event_groupsTableMouseClicked

    private void addStudentToGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentToGroupButtonActionPerformed
        AddStudentToGroupDialog as = new AddStudentToGroupDialog(daycare, this, daycare.getClassRoomsList().get(classRoomSelect.getSelectedIndex()));
        as.setLocationRelativeTo(null);
        as.setVisible(true);
    }//GEN-LAST:event_addStudentToGroupButtonActionPerformed
    public void postInit(DayCare daycare){
        classRoomSelect.setSelectedItem(null);
        
        setClassRoomDropDown(daycare.getClassRoomsList());
        classRoomSelect.setSelectedItem(null);
        groupDtm = (DefaultTableModel) groupsTable.getModel();
        studentDtm = (DefaultTableModel) studentTable.getModel();
        checkMaxLimitForGroup();
    }
    
    public void setDefaultClassRoom(){
        classRoomSelect.setSelectedItem(null);
    }
    
    public void setClassRoomDropDown(Vector<Classroom> classRooms){
        int n = classRooms.size();
        System.out.println(n);
        String[] options = new String[n];
        for(int i = 0; i< n; i++){
            options[i] = (String) classRooms.get(i).getName();
        }
        classRoomSelect.setModel(new javax.swing.DefaultComboBoxModel<>(options));
    }
            
    
    public static void handlePostClassroomCreate (JDialog jd){
        jd.dispose();
    }
    public static void handlePostStudentAddition (JDialog jd, int limit){
        jd.dispose();
        
    }
    
    public void checkMaxLimitForGroup(){
        if(selectedGroupIndex>=0){
        int sizeLimit = Integer.parseInt(noteValue.getText());
        int actualSize = daycare.getClassRoomsList().get(classRoomSelect.getSelectedIndex()).getGroups().get(selectedGroupIndex).getStudentList().size();
        if(actualSize>=sizeLimit){
            addStudentToGroupButton.setVisible(false);
        }
        else{
            addStudentToGroupButton.setVisible(true);
        }
        }
    }
    
    public void checkMaxLimitForGroupAddition(){
        if(selectedClassIndex>=0){
            Classroom c = daycare.getClassRoomsList().get(classRoomSelect.getSelectedIndex());
            boolean b = GroupRules.validate(c.getAgeLower(), c.getAgeHigher(), c.getGroups().size());
            addGroupButton.setVisible(b);
    }
    }  
    public void populateGroupTable(){
        Classroom c = daycare.getClassRoomsList().get(classRoomSelect.getSelectedIndex());
        String age = "From " + c.getAgeLower()+" to "+c.getAgeHigher();
        ageRange.setText(age);
        Vector<Group> groups = c.getGroups();
        int n = groups.size();
        String[] options = new String[n];
        groupDtm.setRowCount(0);
        
        for ( Group p : groups)
        {
         
             groupDtm.addRow(new Object[]{ p.getGroupName()});
        }
        groupsTable.setModel(groupDtm);
    }
    
    public void populateStudentTable(){
        studentTable.setVisible(false);
        Vector<Student> students = daycare.getClassRoomsList().get(selectedClassIndex).getGroups().get(selectedGroupIndex).getStudentList();
  
        int n = students.size();
        String[] options = new String[n];
        studentDtm.setRowCount(0);
        int x = 0;
        for ( Student p : students)
        {
         
             studentDtm.addRow(new Object[]{++x, p.getFirstName(), p.getLastName(), p.getAge(), String.valueOf(p.getPhoneNumber())});
        }
        studentTable.setModel(studentDtm);
        studentTable.setVisible(true);
    }
    
    public void setTeacherName(){
        Teacher t = daycare.getClassRoomsList().get(selectedClassIndex).getGroups().get(selectedGroupIndex).getTeacher();
        teacherValueLabel.setText(""+t.getFirstName()+" "+t.getLastName());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGroupButton;
    private javax.swing.JButton addStudentToGroupButton;
    private javax.swing.JButton addTeacherButton;
    private javax.swing.JLabel ageRange;
    private javax.swing.JComboBox<String> classRoomSelect;
    private javax.swing.JLabel groupLimitLabel;
    private javax.swing.JTable groupsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel notePrefix;
    private javax.swing.JLabel notePrefix1;
    private javax.swing.JLabel noteValue;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel teacherLabel;
    private javax.swing.JLabel teacherValueLabel;
    private javax.swing.JLabel totalCount;
    // End of variables declaration//GEN-END:variables
}
